#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define sz(c) (int)c.size()
#define all(c) c.begin(),c.end()

// All the ants have the same constant speed

void solve() {
	ll n, l;
	cin >> n >> l;
	vector<ll> d, p;
	map<pair<ll,ll>, ll> m;
	for (int i = 0; i < n; i++)
		cin >> p[i] >> d[i];

	for (int i = 0; i < n; i++)
		if (!d[i])
			d[i] = -1;

	for (int i = 0; i < n; i++)
		m[{p[i],d[i]}] = i+1;

	vector<ll> out;
	vector<bool> finished(n, 0);
	ll ants = n;
	while (ants) {
		vector<bool> used(n,0);
		for (int i = 0; i < n; i++)
			if (!finished[i])
				if (p[i] + d[i] <= 0 || p[i] + d[i] == l) {
					out.push_back(i+1);
					finished[i] = 1;
					m[{p[i],d[i]}] = 0;
					ants--;
				}
		
		for (int i = 0; i < n; i++) {
			if (!finished[i])
				if (m[{p[i+d[i]],d[i] == 1 ? -1 : 1}]) {
					m[{p[i],-d[i]}] = m[{p[i],d[i]}];
					m[{p[i],d[i]}] = 0;
					d[i] *= -1;
					used[i] = 1;
				}
		}

		for (int i = 0; i < n; i++) {
			if (!finished[i]) {
				if (!used[i]) {
					m[{p[i]+d[i],d[i]}] = m[{p[i],d[i]}];
					m[{p[i],d[i]}] = 0;
					p[i] += d[i];
					if (m[{p[i],-d[i]}]) {
						ll temp = m[{p[i],d[i]}];
						m[{p[i],d[i]}] = m[{p[i],-d[i]}];
						m[{p[i],-d[i]}] = temp;
					}
				}
				
			}
		}
	}
	
	for (ll i : out)
		cout << i << "\n";
}

int main(void) {
	ios::sync_with_stdio(0);
	cin.tie(0);
	
	int t;
	cin >> t;
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
}

